@page "/EditGame/{Id}"
@using NewBlazorServerPJ.Data
@inject IGameServices GameServices
@inject NavigationManager NavigationManager



<MudCard Class="ml-10 mr-10" style="margin-top:30px" Elevation="25">
<MudText Align="Align.Left" Typo="Typo.h4" Style="margin-left:10px;margin-top:10px;margin-top:10px"><b>Edit Game</b></MudText>

<hr />

<form>
    <div class="row" style="margin-bottom:20px">
        <div class="col-md-8">
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                @*<MudTextField @bind-Value="@game.GameName"></MudTextField>*@
                <input form="Name" class="form-control" @bind="@game.GameName" />
            </div>
            <div class="form-group">
                <label for="ReleaseDate" class="control-label">Release Date</label>
                @*<MudTextField InputType="InputType.Date" @bind-Value="@game.ReleaseDate"></MudTextField>*@
                <input type="date" class="form-control" @bind="@game.ReleaseDate" />
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@Save" value="Update" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

</MudCard>

@code {
    [Parameter]
    public string Id { get; set; }

    private GameModel game = new GameModel();
    private List<GameModel> gameList = new List<GameModel>(); 

    protected override async Task OnInitializedAsync()
    {
        //game = GameServices.GetGameById(int.Parse(Id));    
        game = await Task.Run(() => GameServices.GetGameById(Convert.ToInt32(Id)));
    }

    // protected override async Task OnParametersSetAsync()
    //{
    //   game = GameServices.GetGameById(int.Parse(Id));   

    //}
    
    private List<GameModel> GetAllGameList()
    {               
        gameList = GameServices.GetGameList();
        return gameList;
    }

    private void Save()
    {
        GameServices.SaveGame(game);
        game = new GameModel();        
        GetAllGameList();  
        NavigationManager.NavigateTo("/GamePage");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("/GamePage");
    }
}